"""
–§—É–Ω–∫—Ü–∏—è pluck()
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é pluck(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç—Ä–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:

data ‚Äî —Å–ª–æ–≤–∞—Ä—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏
path ‚Äî —Å—Ç—Ä–æ–∫–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∞—è —Å–æ–±–æ–π –∫–ª—é—á –∏–ª–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–ª—é—á–µ–π, –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É .
default ‚Äî –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç, –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é; –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ None, –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω —è–≤–Ω–æ
–§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É path –∏–∑ —Å–ª–æ–≤–∞—Ä—è data. –ï—Å–ª–∏ path –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–ª—é—á–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, key1.key2, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É key2 –∏–∑ —Å–ª–æ–≤–∞—Ä—è data[key1]. –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞ –∏–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –∫–ª—é—á–∞ –∏–∑ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–ª—é—á–µ–π –≤ —Å–ª–æ–≤–∞—Ä–µ –Ω–µ—Ç, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ default.

https://stepik.org/lesson/794484/step/17?unit=797232
"""


def testing_lesson(filename: str):
    '''–§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–¥ –∏–∑ –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –∫–æ–¥–∞ –∏ –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç'''
    from zipfile import ZipFile

    with ZipFile(filename) as z:
        length = len(z.namelist()) // 2
        files = [(code, out) for code, out in zip(z.namelist()[::2], z.namelist()[1::2])]
        for file_exec, file_out in files:
            with z.open(name=file_exec) as fi:
                with z.open(name=file_out) as fo:
                    code, out = fi.read().decode(), fo.read().decode()
                    ##################################
                    # –¢—É—Ç –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π –∫–æ–¥ –∏–∑ –∑–∞–¥–∞–Ω–∏—è. #
                    ##################################
                    def pluck(data: dict, path: str, default="None"):
                        if path in data:
                            return data[path]

                        path = path.split(".")
                        for _ in data:
                            try:
                                if isinstance(data[path[0]], dict):
                                    data = data[path[0]]
                                    del path[0]
                                    return pluck(data, ".".join(path), default)
                            except KeyError:
                                return default
                    ###################################
                    print(f'–¢–µ—Å—Ç ‚Ññ {file_exec} –∏–∑ {length}')
                    print(f'\n–ö–æ–¥: \n\n{code}\n')
                    print('-' * 100)
                    print('–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:')
                    try:
                        exec(code)
                        print(f"{'-' * 100}\n–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n{out}\n{'*' * 100}")
                    except Exception as e:
                        print(f'{"üö´" * 50}\n"–¢–µ—Å—Ç ‚Ññ {file_exec} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å `–æ—à–∏–±–∫–æ–π "{type(e).__name__}: {e}\n')
                        print(f'–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: \n{out}\n{"üö´" * 50}"\n')


filename = 'Module_2/lesson 2.2_step_17.zip'
testing_lesson(filename)

# if __name__ == "__main__":
#     d = {"a": {"b": 5, "z": 20}, "c": {"d": 3}, "x": 40}
#     print(pluck(d, "x"))

#     d = {"a": {"b": 5, "z": 20}, "c": {"d": 3}, "x": 40}
#     print(pluck(d, "a.b"))

#     d = {"a": {"b": {"c": {"d": {"e": 4}}}}}
#     print(pluck(d, "a.b.c"))

#     d = {"a": {"b": 5, "z": 20}, "c": {"d": 3}, "x": 40}
#     print(pluck(d, "c.d"))

#     d = {"a": {"b": 5, "z": 20}, "c": {"d": 3}, "x": 40}
#     print(pluck(d, "c.e"))

#     d = {
#         "firstname": "–¢–∏–º—É—Ä",
#         "lastname": "–ì—É–µ–≤",
#         "birthdate": {"day": 10, "month": "October", "year": 1993},
#         "address": {
#             "streetaddress": "–ß–∞—Å–æ–≤–∞—è 25, –∫–≤. 127",
#             "city": {
#                 "region": "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
#                 "type": "–≥–æ—Ä–æ–¥",
#                 "cityname": "–ú–æ—Å–∫–≤–∞",
#             },
#             "postalcode": "125315",
#         },
#     }
#     print(pluck(d, "birthdate.weekday", default="Not found"))
